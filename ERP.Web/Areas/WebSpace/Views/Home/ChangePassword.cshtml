@model ERP.Entity.Models.Extended.ChangePasswordModel
@{
    ViewBag.Title = "ChangePassword";
}

<div class="row">
    <div class="container">

        @if (TempData["Success"] != null)
        {<div class="alert alert-success alert-dismissible">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Success!</strong>   @TempData["Success"]
            </div>


        }
        else
        {
            if (TempData["Error"] != null)
            {<div class="alert alert-danger alert-dismissible">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <strong>Error!</strong> @TempData["Error"]
                </div>


            }

        }


    </div>


</div>


<div class="row">
    <div class="container">

        <h2 class="head">Change Password</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <label class="control-label col-md-2">Current Password:</label>
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control", @TextMode = "Password" } })
                        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", @TextMode = "Password" } })
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @TextMode = "Password" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Change Password" class="btn" />
                    </div>
                </div>
            </div>
        }



    </div>
</div>

