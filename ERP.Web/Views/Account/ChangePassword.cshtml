@model ERP.Entity.Models.Extended.ChangePasswordModel

@{
    ViewBag.Title = "ChangePassword";
}

<div class="row">
    <div class="col-12">
        <div class="page-title-box d-flex align-items-center justify-content-between">
            <h4 class="mb-0 font-size-18">Change Password</h4>

            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="~/Dashboard/Index">Home</a></li>
                    <li class="breadcrumb-item active">Change Password</li>
                </ol>
            </div>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="mdi mdi-check-all mr-2"></i>
                @TempData["Success"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

        }
        else
        {
            if (TempData["Error"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="mdi mdi-block-helper mr-2"></i>
                    @TempData["Error"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

            }

        }


    </div>


</div>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">

                <h4 class="card-title">Change Your Password</h4>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <label class="control-label col-md-2">Current Password:</label>
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control", @TextMode = "Password" } })
                                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control", @TextMode = "Password" } })
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @TextMode = "Password" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Change Password" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }


            </div>
            </div>
        </div>
    </div>
                
